스레드 동기화 처리
-Mutex는 상호 배제를 의미한다. 이는 주어진 특정 시간에 하나의 스레드만 특정 리소스를 사용할 수 있음을 의미한다.
 한 프로그램에 다중 스레드가 있는 경우 상호 배제는 스레드가 특정 리소스를 동시에 사용하도록 제한한다. 다른 스레드를 잠그고 임계 영역으로의 진입을
 제한한다.
-파이썬에서 뮤텍스를 구현하기 위해 threading 모듈의 lock() 함수를 사용하여 스레드를 잠글 수 있다.
-동기화하는 방법 중에 Lock을 살펴보자. Lock은 특정 스레드에서 변수를 사용하기 시작했으면 다른 스레드가 사용하지 못하도록 막는 역할을 한다.
 마치 변수를 잠구는 것과 같아서 Lock이라고 부른다. 변수를 다 사용했으면 그 스레드는 변수에 대한 Lock을 풀어줘야 한다. 잠금을 푸는 것은
 Release라고 부른다. 이런 간단한 잠금으로 변수를 서로 다른 스레드가 동시에 접근하지 못하게 막으면 위의 원치 않는 상황은 해결할 수 있다.
-Lock 사용은 아래와 같이 한다
 -> lock.aquire() - 잠금 : 다른 스레드들은 접근 못하게 막는다.
 -> 여기 안에 있는 Code들은 무조건 한 스레드에 의해서 순차적으로 실행되게 된다.
 -> lock.release() - 잠금 해제 : 다른 스레드들에게 접근 가능하도록 허용한다.

-통상 스레드는 모든 자원을 공유하기 때문에 원하는 결과 값을 얻기 위해서는 속도는 조금 느려도 위와 같이 LOCK을 이용하여 다른 스레드가
 접근하여 데이터를 훼손하는 것보단 무엇보다 데이터의 신뢰성이 우선이기 때문에 Lock을 이용하는 것이다.

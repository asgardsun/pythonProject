#스레드 실습 -1
#프로세스 : 하나의 응용 어플리케이션이 프로그램이 메모리에 로딩이 되어 CPU에 의해 실행된 상태
#스레드 : 하나의 프로세스 내에서 작업 단위를 의미, 1~n개 까지 만들수가 있다.
#하나의 코어는 하나의 스레드를 도맡아서 처리한다. 코어가 많으면 많을수록 PC의 처리능력이 좋다.
#메인 스레드 : 파이썬 인터프리터가 제일 먼저 시작하는 부분을 메인스레드라고 칭한다.
#메인 스레드는 여러개의 서브(작업)스레드를 만들어서 실행시킬 수가 있다.
#특정 스레드가 또다른 스레드를 만들어서 실행하는 것도 가능하다.
#서브(작업)스레드를 만들어서 병렬로 코드를 실행시킬 수 있다. 이로 인해 스레드를 이용한 멀티 태스킹을 의미하는 것이다.
#메인 스레드가 작업 스레드보다 먼저 종료가 되더라도, 작업 스레드가 계속 실행중이라면 프로세스는 종료되지 않는다.


import threading
import time

#스레드 클래스 정의

#스레드가 되기 위해서는 threading.Thread 클래스를 상속을 반드시 받아야 한다.
class Worker(threading.Thread):
    #생성자
    def __init__(self, name):
        super().__init__()  #조상 클래스 생성자 호출
        self.name = name    #스레드 이름
    #CPU 스케줄러에 따라서 특정 스레드가 먼저 시작하였다 하더라도 CPU스케줄러에 따라서
    #종료하는 스레드의 순서가 얼마든지 바뀔수가 있다.
    def run(self):
        print("작업 스레드 시작 : ", threading.current_thread().name)
        time.sleep(3)       #3초간 스레드 일시정지
        print("작업 스레드 종료 : ", threading.current_thread().name)
if __name__ == "__main__":
    print("메인 스레드 시작")
    #5개의 스레드가 생성되고 시작된다.
    for i in range(5):
        name = "스레드->{0}".format(i)
        t = Worker(name)        #작업 스레드 생성
        t.start()               #작업 스레드 구현되어 있는 run() 메서드를 자동 호출함.

    print("메인 스레드 종료")

